#!/bin/bash
# This script was generated by Claude 3.7

# Exit on error
set -e

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}Generating NestJS entities for the project structure...${NC}"

# Create base directories if they don't exist
mkdir -p src/application/use-cases/process-drug-label
mkdir -p src/application/services
mkdir -p src/application/dtos
mkdir -p src/application/interfaces
mkdir -p src/domain/entities
mkdir -p src/domain/repositories
mkdir -p src/infrastructure/controllers
mkdir -p src/infrastructure/database/entities
mkdir -p src/infrastructure/database/repositories
mkdir -p src/infrastructure/database/migrations
mkdir -p src/infrastructure/external-services/dailymed
mkdir -p src/infrastructure/external-services/spl-parser
mkdir -p src/infrastructure/external-services/ai-mapping
mkdir -p src/infrastructure/auth/strategies
mkdir -p src/infrastructure/auth/guards
mkdir -p src/infrastructure/auth/decorators
mkdir -p src/infrastructure/queues/producers
mkdir -p src/infrastructure/queues/consumers
mkdir -p src/shared/config

# Generate application layer files
echo -e "${YELLOW}Generating application layer files...${NC}"
npx nest generate class application/use-cases/process-drug-label/process-drug-label.command --no-spec
npx nest generate class application/use-cases/process-drug-label/process-drug-label.handler --no-spec
npx nest generate class application/use-cases/process-drug-label/process-drug-label.use-case --no-spec
npx nest generate service application/services/indication-query --no-spec
npx nest generate class application/dtos/indication-query.dto --no-spec
npx nest generate interface application/interfaces/idailymed.client
npx nest generate interface application/interfaces/ispl-parser.service
npx nest generate interface application/interfaces/iai-mapper.client

# Generate domain layer files
echo -e "${YELLOW}Generating domain layer files...${NC}"
npx nest generate class domain/entities/drug-label.entity --no-spec
npx nest generate class domain/entities/indication.entity --no-spec
npx nest generate interface domain/repositories/idrug-label.repository
npx nest generate interface domain/repositories/iindication-mapping.repository

# Generate infrastructure layer files
echo -e "${YELLOW}Generating infrastructure layer files...${NC}"
npx nest generate controller infrastructure/controllers/indication --no-spec
npx nest generate controller infrastructure/controllers/auth --no-spec

# Generate TypeORM entities
echo -e "${YELLOW}Generating TypeORM entities...${NC}"
npx nest generate class infrastructure/database/entities/drug-label.typeorm.entity --no-spec
npx nest generate class infrastructure/database/entities/indication.typeorm.entity --no-spec
npx nest generate class infrastructure/database/entities/icd10-mapping.typeorm.entity --no-spec

# Generate TypeORM repositories
npx nest generate class infrastructure/database/repositories/drug-label.typeorm.repository --no-spec
npx nest generate class infrastructure/database/repositories/indication-mapping.typeorm.repository --no-spec

# Generate database module
npx nest generate module infrastructure/database --no-spec

# Generate external services
echo -e "${YELLOW}Generating external services...${NC}"
npx nest generate service infrastructure/external-services/dailymed/dailymed.client --no-spec
npx nest generate service infrastructure/external-services/spl-parser/spl-parser.service --no-spec
npx nest generate service infrastructure/external-services/ai-mapping/comprehend.client --no-spec

# Generate auth components
echo -e "${YELLOW}Generating auth components...${NC}"
npx nest generate class infrastructure/auth/strategies/jwt.strategy --no-spec
npx nest generate guard infrastructure/auth/guards/jwt-auth --no-spec
npx nest generate guard infrastructure/auth/guards/roles --no-spec
npx nest generate decorator infrastructure/auth/decorators/roles
npx nest generate module infrastructure/auth --no-spec

# Generate queue components
echo -e "${YELLOW}Generating queue components...${NC}"
npx nest generate service infrastructure/queues/producers/label-processing.producer --no-spec
npx nest generate service infrastructure/queues/consumers/label-processing.consumer --no-spec
npx nest generate service infrastructure/queues/consumers/indication-mapping.consumer --no-spec
npx nest generate module infrastructure/queues --no-spec

# Generate shared config
echo -e "${YELLOW}Generating shared config...${NC}"
npx nest generate interface shared/config/app-config.interface

# Generate root module if it doesn't exist
echo -e "${YELLOW}Generating root module if it doesn't exist...${NC}"
[ ! -f src/app.module.ts ] && npx nest generate module app --no-spec

echo -e "${GREEN}Successfully generated all NestJS entities!${NC}"